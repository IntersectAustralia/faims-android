onEvent("control/Entity", "show", "onShowEntity()");
onEvent("control/Entity/NewEntity", "click", "newEntity()");
onEvent("control/Entity/ListEntity", "click", "loadEntity()");

onEvent("Entity/Entity/AttachFiles", "click", "attachFileTo(\"Entity/Entity/Files\")");
onEvent("Entity/Entity/AttachPhoto", "click", "attachPictureTo(\"Entity/Entity/Photo\")");
onEvent("Entity/Entity/AttachAudio", "click", "attachAudioTo(\"Entity/Entity/Audio\")");
onEvent("Entity/Entity/AttachVideo", "click", "attachVideoTo(\"Entity/Entity/Video\")");
onEvent("Entity/Entity/ViewAllFiles", "click", "viewArchEntAttachedFiles(entity_id)");
onEvent("Entity/Entity/AutoAttachFiles", "click", "attachedFilesAuto()");
onEvent("Entity/Entity/Update", "delayclick", "saveEntity()");

String entity_id = null;



onShowEntity() {
    fetchEntityList("Entity", new FetchCallback() {
        onFetch(result) {
            populateList("control/Entity/ListEntity", result);
        }
    });
}

newEntity(){
    entity_id = null;
    newTabGroup("Entity");
    
}
loadEntity() {
    entity_id = getListItemValue();
    loadEntityFrom(entity_id);
}
loadEntityFrom(entid) {
    entity_id = entid;
    if (isNull(entid)) return;
    showTabGroup("Entity", entid);
}

saveEntity() {
    if (isNull(getFieldValue("Entity/Entity/ID"))) { 
        showWarning("Validation Error", "Cannot save Entity without ID");
        showTabGroup("Entity");
        return false;
    }
    saveTabGroup("Entity", entity_id, null, null, new SaveCallback() {
        onSave(uuid, newRecord) {
            entity_id = uuid;
        }
    });
}

attachedFilesAuto() {
	ArrayList files = new ArrayList();
	files.add(getAttachedFilePath("files/data/data_schema.xml"));
	files.add(getAttachedFilePath("files/data/ui_logic.bsh"));
	files.add(getAttachedFilePath("files/data/ui_schema.xml"));
	populateFileList("Entity/Entity/Files", files);
	audios = new ArrayList();
	audios.add(getAttachedFilePath("files/data/audio-1410324241737.mp4"));
	populateFileList("Entity/Entity/Audio", audios);
	videos = new ArrayList();
	videos.add(getAttachedFilePath("files/data/video-1409708461081.mp4"));
	populateVideoGallery("Entity/Entity/Video", videos);
	photos = new ArrayList();
	photos.add(getAttachedFilePath("files/data/test.png"));
	populateCameraPictureGallery("Entity/Entity/Photo",photos);
}

onEvent("control/sync/startsync", "click", "startSync()");
onEvent("control/sync/stopsync", "click", "stopSync()");

setSyncMinInterval(10.0f);
setSyncMaxInterval(20.0f);
setSyncDelay(5.0f);

startSync() {
    setSyncEnabled(true);
    setFileSyncEnabled(true);
}

stopSync() {
    setSyncEnabled(false);
    setFileSyncEnabled(false);
}



addActionBarItem("file sync", new ToggleActionButtonCallback() {
    actionOnLabel() {
        "Turn Sync off";
    }
    actionOn() {
        setSyncEnabled(false);
        setFileSyncEnabled(false);
    }
    isActionOff() {
        isFileSyncEnabled();
    }
    actionOffLabel() {
        "Turn Sync on";
    }
    actionOff() {
        setSyncEnabled(true);
        setFileSyncEnabled(true);
    }
});

/*** Uneditable - you can edit the code below with extreme precaution ***/
/*** USER ***/
User user; // dont touch
String userid;

populateListForUsers() {
    fetchAll("select userid, fname ||' ' || lname from user where userdeleted is NULL", new FetchCallback() {
        onFetch(result) {
            populateList("user/usertab/users", result);
        }
    });
    return users;
}
populateListForUsers();

login(){
    fetchOne("select userid,fname,lname,email from user where userid='" + getListItemValue() + "';", new FetchCallback() {
        onFetch(userResult) {
            user = new User(userResult.get(0),userResult.get(1),userResult.get(2),userResult.get(3));
            setUser(user);
            showTabGroup("control");
        }
    });
}

onEvent("user/usertab/users", "click", "login()");