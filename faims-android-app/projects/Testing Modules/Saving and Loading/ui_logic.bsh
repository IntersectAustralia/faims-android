// USER

login(){
	Object userResult = fetchOne("select userid, fname, lname, email from user where userid='" + getListItemValue() + "';");
	user = new User(userResult.get(0), userResult.get(1), userResult.get(2), userResult.get(3));
	setUser(user);
	showTabGroup("menu");
}

onEvent("user/tab1/users", "click", "login()");

loadUsers() {
	Object usersList = fetchAll("select userid, fname ||' ' || lname from user");
	populateList("user/tab1/users", usersList);
}

onEvent("user", "load", "loadUsers()");

// CONTROLS

createOption(name, value) {
	ArrayList option = new ArrayList();
	option.add(name);
	option.add(value);
	return option;
}

options = new ArrayList();
options.add(createOption("entity", "Save and Load Entity"));
options.add(createOption("relationship", "Save and Load Relationship"));
options.add(createOption("entity_childview", "Save and Load Entity - Child Views"));
options.add(createOption("relationship_childview", "Save and Load Relationship - Child Views"));
options.add(createOption("associations", "Associations"));

loadOptions() {
	populateList("menu/tab1/options", options);
}

onEvent("menu", "load", "loadOptions()");

onClickOption() {
	String value = getListItemValue();
	if ("entity".equals(value)) {
		showTabGroup("tabgroup1");
	} else if ("relationship".equals(value)) {
		showTabGroup("tabgroup2");
	} else if ("entity_childview".equals(value)) {
		showTabGroup("tabgroup3");
	} else if ("relationship_childview".equals(value)) {
		showTabGroup("tabgroup4");
	} else if ("associations".equals(value)) {
		showTabGroup("tabgroup5");
	}
}

onEvent("menu/tab1/options", "click", "onClickOption()");

startSync() {
	setSyncEnabled(true);
	setFileSyncEnabled(true);
}

stopSync() {
	setSyncEnabled(false);
}

init() {
	setSyncMinInterval(10.0f);
	setSyncMaxInterval(20.0f);
	setSyncDelay(5.0f);
	startSync();
	// reset ids
	entityId = tableEntityId = null;
	relationshipId = tableRelationshipId = null;
}

cleanup() {
	stopSync();
}

onEvent("menu", "show", "init()"); 
onEvent("user", "show", "cleanup()");

// ENTITY

String entityId = null;
String tableEntityId = null;

initEntity(tabgroup) {
 	clearEntity(tabgroup);
}

closeEntity(tabgroup) {
	cancelTabGroup(tabgroup, true);
}

loadEntities(tabgroup) {
	Object entities = fetchEntityList("small");
	populateDropDown(tabgroup + "/tab2/entities", entities);
}

saveEntity(tabgroup) {
	updateEntity(tabgroup);
}

loadEntity(tabgroup) {
	localId = getFieldValue(tabgroup + "/tab2/entities");
	if (isNull(localId)) return;

	clearEntity(tabgroup);
	entityId = localId;	
	showTabGroup(tabgroup, entityId);
}

reloadEntity(tabgroup) {
	if (isNull(entityId)) return;
	
	showTabGroup(tabgroup, entityId);
}

updateEntity(tabgroup) {
	if (isNull(entityId)) entityId = null;

	//if (entityId == null && tableEntityId != null) entityId = tableEntityId;
	
	attributes = null;
	if (entityId == null) {
		attributes = createAttributeList();
		entityCount = Integer.valueOf(fetchOne("select count(distinct(uuid)) from archentity;").get(0)) + 1;
		attributes.add(createEntityAttribute("entity", "Small " + entityCount, null, null, null));
	}

	saveTabGroup(tabgroup, entityId, null, attributes, "entityId = getLastSavedRecordId(); reloadEntity(\""+tabgroup+"\");");
}

clearEntity(tabgroup) {
	Object locations = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'location';");
	populateCheckBoxGroup(tabgroup + "/tab1/location", locations);

	Object choices = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'choice';");
	populateRadioGroup(tabgroup + "/tab1/choice", choices);

	Object items = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'item';");
	populateDropDown(tabgroup + "/tab1/item", items);
	
	populateHierarchicalDropDown(tabgroup + "/tab1/type", "type");

	Object pictures = fetchAll("select vocabid, vocabname, pictureurl from vocabulary left join attributekey using (attributeid) where attributename = 'gallery';");
	populatePictureGallery(tabgroup + "/tab1/gallery", pictures);
	
	populateHierarchicalPictureGallery(tabgroup + "/tab1/rocks", "rocks");
	
	entityId = null;
	
	newTabGroup(tabgroup);
	
	setFieldValue(tabgroup + "/tab1/timestamp", getCurrentTime());
}

deleteEntity(tabgroup){
	if (isNull(entityId)) return;
	
	deleteArchEnt(entityId);
	entityId = null;
	
  cancelTabGroup(tabgroup, false);
}

onEvent("tabgroup1", "show", "initEntity(\"tabgroup1\")");	
onEvent("tabgroup1/tab1/save", "delayclick", "saveEntity(\"tabgroup1\")");
onEvent("tabgroup1/tab1/clear", "click", "clearEntity(\"tabgroup1\")");
onEvent("tabgroup1/tab2/load", "click", "loadEntity(\"tabgroup1\")");
onEvent("tabgroup1/tab1/delete", "click", "deleteEntity(\"tabgroup1\")");
onEvent("tabgroup1/tab1/close", "click", "closeEntity(\"tabgroup1\")");

onEvent("tabgroup1/tab1/attachfile", "click", "attachFileTo(\"tabgroup1/tab1/files\")");
onEvent("tabgroup1/tab1/attachpicture", "click", "attachPictureTo(\"tabgroup1/tab1/pictures\")");
onEvent("tabgroup1/tab1/attachvideo", "click", "attachVideoTo(\"tabgroup1/tab1/videos\")");
onEvent("tabgroup1/tab1/attachaudio", "click", "attachAudioTo(\"tabgroup1/tab1/audios\")");
onEvent("tabgroup1/tab1/viewattached", "click", "viewArchEntAttachedFiles(entityId)");

onEvent("tabgroup1/tab2", "show", "loadEntities(\"tabgroup1\")");

onEvent("tabgroup3", "show", "initEntity(\"tabgroup3\")");	
onEvent("tabgroup3/tab1/save", "delayclick", "saveEntity(\"tabgroup3\")");
onEvent("tabgroup3/tab1/clear", "click", "clearEntity(\"tabgroup3\")");
onEvent("tabgroup3/tab2/load", "click", "loadEntity(\"tabgroup3\")");
onEvent("tabgroup3/tab1/delete", "click", "deleteEntity(\"tabgroup3\")");
onEvent("tabgroup3/tab1/close", "click", "closeEntity(\"tabgroup3\")");

onEvent("tabgroup3/tab1/attachfile", "click", "attachFileTo(\"tabgroup3/tab1/files\")");
onEvent("tabgroup3/tab1/attachpicture", "click", "attachPictureTo(\"tabgroup3/tab1/pictures\")");
onEvent("tabgroup3/tab1/attachvideo", "click", "attachVideoTo(\"tabgroup3/tab1/videos\")");
onEvent("tabgroup3/tab1/attachaudio", "click", "attachAudioTo(\"tabgroup3/tab1/audios\")");
onEvent("tabgroup3/tab1/viewattached", "click", "viewArchEntAttachedFiles(entityId)");

onEvent("tabgroup3/tab2", "show", "loadEntities(\"tabgroup3\")");

// RELATIONSHIP

String relationshipId = null;
String tableRelationshipId = null;

initRelationship(tabgroup) {
	clearRelationship(tabgroup);
}

closeRelationship(tabgroup) {
	cancelTabGroup(tabgroup, true);
}

loadRelationships(tabgroup) {
	Object relationships = fetchRelationshipList("abovebelow");
	populateDropDown(tabgroup + "/tab2/relationships", relationships);
}

saveRelationship(tabgroup) {
	updateRelationship(tabgroup);
}

loadRelationship(tabgroup) {
	localId = getFieldValue(tabgroup + "/tab2/relationships");
	if (isNull(localId)) return;

	clearRelationship(tabgroup);	
	relationshipId = localId;
	showTabGroup(tabgroup, relationshipId);
}

reloadRelationship(tabgroup) {
	if (isNull(relationshipId)) return;
	
	showTabGroup(tabgroup, relationshipId);
}

updateRelationship(tabgroup) {
	if (isNull(relationshipId)) relationshipId = null;

	//if (relationshipId == null && tableRelationshipId != null) relationshipId = tableRelationshipId;
	
	attributes = null;
	if (relationshipId == null) {
		attributes = createAttributeList();
		relationshipCount = Integer.valueOf(fetchOne("select count(distinct(relationshipid)) from relationship;").get(0)) + 1;
		attributes.add(createRelationshipAttribute("relationship", "AboveBelow " + relationshipCount, null, null));
	}
	
	saveTabGroup(tabgroup, relationshipId, null, attributes, "relationshipId = getLastSavedRecordId(); reloadRelationship(\""+tabgroup+"\");");
}

clearRelationship(tabgroup) {
	Object locations = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'location';");
	populateCheckBoxGroup(tabgroup + "/tab1/location", locations);

	Object choices = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'choice';");
	populateRadioGroup(tabgroup + "/tab1/choice", choices);

	Object items = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'item';");
	populateDropDown(tabgroup + "/tab1/item", items);
	
	populateHierarchicalDropDown(tabgroup + "/tab1/type", "type");

	Object pictures = fetchAll("select vocabid, vocabname, pictureurl from vocabulary left join attributekey using (attributeid) where attributename = 'gallery';");
	populatePictureGallery(tabgroup + "/tab1/gallery", pictures);
	
	populateHierarchicalPictureGallery(tabgroup + "/tab1/rocks", "rocks");
	
	relationshipId = null;
	
	newTabGroup(tabgroup);
	
	setFieldValue(tabgroup + "/tab1/timestamp", getCurrentTime());
}

deleteRelationship(tabgroup){
	if (isNull(relationshipId)) return;
	
	deleteRel(relationshipId);
	relationshipId = null;
	
  cancelTabGroup(tabgroup, false);
}

onEvent("tabgroup2", "show", "initRelationship(\"tabgroup2\")");	
onEvent("tabgroup2/tab1/save", "delayclick", "saveRelationship(\"tabgroup2\")");
onEvent("tabgroup2/tab1/clear", "click", "clearRelationship(\"tabgroup2\")");
onEvent("tabgroup2/tab2/load", "click", "loadRelationship(\"tabgroup2\")");
onEvent("tabgroup2/tab1/delete", "click", "deleteRelationship(\"tabgroup2\")");
onEvent("tabgroup2/tab1/close", "click", "closeRelationship(\"tabgroup2\")");

onEvent("tabgroup2/tab1/attachfile", "click", "attachFileTo(\"tabgroup2/tab1/files\")");
onEvent("tabgroup2/tab1/attachpicture", "click", "attachPictureTo(\"tabgroup2/tab1/pictures\")");
onEvent("tabgroup2/tab1/attachvideo", "click", "attachVideoTo(\"tabgroup2/tab1/videos\")");
onEvent("tabgroup2/tab1/attachaudio", "click", "attachAudioTo(\"tabgroup2/tab1/audios\")");
onEvent("tabgroup2/tab1/viewattached", "click", "viewRelAttachedFiles(relationshipId)");

onEvent("tabgroup2/tab2", "show", "loadRelationships(\"tabgroup2\")");

onEvent("tabgroup4", "show", "initRelationship(\"tabgroup4\")");	
onEvent("tabgroup4/tab1/save", "delayclick", "saveRelationship(\"tabgroup4\")");
onEvent("tabgroup4/tab1/clear", "click", "clearRelationship(\"tabgroup4\")");
onEvent("tabgroup4/tab2/load", "click", "loadRelationship(\"tabgroup4\")");
onEvent("tabgroup4/tab1/delete", "click", "deleteRelationship(\"tabgroup4\")");
onEvent("tabgroup4/tab1/close", "click", "closeRelationship(\"tabgroup4\")");

onEvent("tabgroup4/tab1/attachfile", "click", "attachFileTo(\"tabgroup4/tab1/files\")");
onEvent("tabgroup4/tab1/attachpicture", "click", "attachPictureTo(\"tabgroup4/tab1/pictures\")");
onEvent("tabgroup4/tab1/attachvideo", "click", "attachVideoTo(\"tabgroup4/tab1/videos\")");
onEvent("tabgroup4/tab1/attachaudio", "click", "attachAudioTo(\"tabgroup4/tab1/audios\")");
onEvent("tabgroup4/tab1/viewattached", "click", "viewRelAttachedFiles(relationshipId)");

onEvent("tabgroup4/tab2", "show", "loadRelationships(\"tabgroup4\")");

// ASSOCIATIONS

loadMembers() {
	Object entities = fetchEntityList("small");
	populateDropDown("tabgroup5/tab1/entities", entities);
	
	Object relationships = fetchRelationshipList("abovebelow");
	populateDropDown("tabgroup5/tab1/relationships", relationships);
}

onEvent("tabgroup5", "show", "loadMembers()");

onEvent("tabgroup5/tab1/add", "click", "onAddMember()");

onAddMember() {
	eid = getFieldValue("tabgroup5/tab1/entities");
	rid = getFieldValue("tabgroup5/tab1/relationships");
	if (isNull(eid) || isNull(rid)) return;
	
	verb = getFieldValue("tabgroup5/tab1/verb");
	
	addReln(eid, rid, verb);
	
	showToast("Added relationship member");
}