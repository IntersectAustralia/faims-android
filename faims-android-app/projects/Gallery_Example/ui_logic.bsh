populateListForUsers() {
	fetchAll("select userid, fname ||' ' || lname from user where userdeleted is NULL", new FetchCallback() {
		onFetch(result) {
			populateList("user/tab1/users", result);
		}
	});
	return users;
}
populateListForUsers();

login(){
	fetchOne("select userid,fname,lname,email from user where userid='" + getListItemValue() + "';", new FetchCallback() {
		onFetch(userResult) {
			user = new User(userResult.get(0),userResult.get(1),userResult.get(2),userResult.get(3));
			setUser(user);
			showTabGroup("tabgroup1");
		}
	});
}

onEvent("user/tab1/users", "click", "login()");

String entity_id;
int entityCount;

initialise() {
	fetchEntityList("Simple", new FetchCallback() {
		onFetch(result) {
			entityCount = result.size() + 1;
		}
	});
	fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'type';", new FetchCallback(){
		onFetch(result) {
			populateDropDown("tabgroup1/tab1/type", result);
		}
	});
	fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'location';", new FetchCallback() {
		onFetch(result) {
			populateCheckBoxGroup("tabgroup1/tab2/location", result);
		}
	});
	fetchAll("select vocabid, vocabname, pictureurl from vocabulary left join attributekey using (attributeid) where attributename = 'picture';", new FetchCallback() {
		onFetch(result) {
			populatePictureGallery("tabgroup1/tab1/picture", result);
		}
	});

	refreshEntities();
	setFieldValue("tabgroup1/tab1/time", getCurrentTime());

}

saveEntity() {
	updateEntity(null);
}

updateEntity(entity_id) {
	if (entity_id == null || "".equals(entity_id)) entity_id = null;
	
	List attributes = createAttributeList();
	if (entity_id == null) {
		attributes.add(createEntityAttribute("entity", "Simple " + entityCount++, null, null, null));
	}
	attributes.add(createEntityAttribute("name", getFieldValue("tabgroup1/tab1/name"), null, null, getFieldCertainty("tabgroup1/tab1/name")));
	attributes.add(createEntityAttribute("timestamp", getFieldValue("tabgroup1/tab1/time"), null, null, null));
	attributes.add(createEntityAttribute("type", getFieldAnnotation("tabgroup1/tab1/type"), getFieldValue("tabgroup1/tab1/type"), null, getFieldCertainty("tabgroup1/tab1/type")));
	attributes.add(createEntityAttribute("picture", getFieldAnnotation("tabgroup1/tab1/picture"), getFieldValue("tabgroup1/tab1/picture"), null, getFieldCertainty("tabgroup1/tab1/picture")));
	
	Object values = getFieldValue("tabgroup1/tab2/location");
	
	for (Object value : values) {
		attributes.add(createEntityAttribute("location", getFieldAnnotation("tabgroup1/tab2/location"), value.getName(), null, getFieldCertainty("tabgroup1/tab2/location")));
	}
	
	attributes.add(createEntityAttribute("supervisor", getFieldValue("tabgroup1/tab2/supervisor"), null, null, getFieldCertainty("tabgroup1/tab2/supervisor")));
	
	saveArchEnt(entity_id, "Simple", null, attributes, new SaveCallback() {
		onSave(uuid, newRecord) {
			entity_id = uuid;
			refreshEntities();
		}
	});
	
}

refreshEntities() {
	fetchEntityList("Simple", new FetchCallback() {
		onFetch(result) {		
			populateDropDown("tabgroup1/tab3/entity", result);
		}
	});
}

loadEntity() {
	String id = getFieldValue("tabgroup1/tab3/entity");
	if (id == null || "".equals(id)) return;
	showTabGroup("tabgroup1", id);
}

clearEntity() {
	newTabGroup("tabgroup1");
	setFieldValue("tabgroup1/tab1/time", getCurrentTime());
}

onEvent("tabgroup1", "load", "initialise()");
onEvent("tabgroup1/tab3/save", "click", "saveEntity()");
onEvent("tabgroup1/tab3/update", "click", "updateEntity(getFieldValue(\"tabgroup1/tab3/entity\"))");
onEvent("tabgroup1/tab3/load", "click", "loadEntity()");
onEvent("tabgroup1/tab3/clear", "click", "clearEntity()");
